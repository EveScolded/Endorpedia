{"version":3,"sources":["app/config/colors.ts","app/service/CacheService.ts","app/service/SwapiService.ts","app/UI/FilterSlider.tsx","App.tsx","app/screens/StartScreen.tsx","app/assets/grogu.png","app/screens/People.tsx","app/service/PeopleService.ts","app/assets/searchIcon.png","app/UI/Card.tsx","app/screens/Details.tsx","app/screens/Authentication.tsx","app/service/Authenticator.ts","app/assets/background.jpg","app/screens/Films.tsx","app/service/FilmsService.ts","app/screens/Starships.tsx","app/service/StarshipsService.ts","app/screens/Vehicles.tsx","app/service/VehiclesService.ts","app/screens/Species.tsx","app/service/SpeciesService.ts","app/screens/Planets.tsx","app/service/PlanetsService.ts","app/UI/SearchInput.tsx","app/UI/Dropdown.tsx"],"names":["searchWindow","picker","textWhite","textBlue","borderWhite","mainBanana","mainBackground","CacheService","baseService","getData","endpoint","async","AsyncStorage","getItem","value","JSON","parse","result","setItem","stringify","SwapiService","baseURL","indexOf","fetch","response","json","console","log","FilterSlider","props","CustomThumb","style","styles","thumb","thumbTitle","container","Slider","this","sliderValue","animateTransitions","renderThumbComponent","trackStyle","track","maximumValue","max","minimumValue","min","onValueChange","Component","StyleSheet","create","width","marginLeft","marginRight","marginTop","marginBottom","alignItems","justifyContent","backgroundColor","colors","height","borderRadius","swapiService","NavigationContainer","Stack","Navigator","Screen","name","component","Autenthication","options","title","headerStyle","StartScreen","People","initialParams","dataService","Films","Starships","Vehicles","Species","Planets","Details","createNativeStackNavigator","navigation","mainContainer","source","require","header","text","onPress","navigate","flex","color","textAlign","borderColor","borderWidth","padding","fontWeight","fontSize","textShadowColor","textShadowOffset","textShadowRadius","module","exports","getNextPage","previousResponse","next","peopleService","getMore","combinedResults","state","data","results","setState","originalData","pickerData","Set","map","item","gender","filterPeople","pickerSelectedValue","searchPeople","search","goToDetails","clickedItem","details","onSearchPerson","onSetPickerSelectedValue","selectedOption","filteredData","filter","person","renderCard","itemName","propertyOne","propertyTwo","birth_year","propertyThree","onClick","PeopleService","route","params","isLoading","getPeople","placeholderText","onSearchInput","searchItem","columnWrapperStyle","numColumns","keyExtractor","url","extraData","renderItem","nextURL","query","Card","itemsList","margin","textTransform","borderBottomColor","borderBottomWidth","getDetail","detailValue","push","renderDetail","propName","toUpperCase","slice","replaceAll","toLowerCase","detailName","Array","isArray","newDetails","length","_arrayItem","index","toString","Promise","all","Object","keys","key","includes","arrayItem","detailsContainer","paddingLeft","lineHeight","authenticator","Authenticator","changeIcon","prevState","icon","isHidden","onLogIn","login","password","setToken","getToken","resizeMode","imageBackground","content","inputContainer","placeholder","onChangeText","secureTextEntry","iconStyle","logInButton","buttonText","alignSelf","flexDirection","Platform","OS","token","localStorage","SecureStore","getItemAsync","resolve","setItemAsync","filmsService","romans","episode_id","toLocaleString","director","release_date","FilmsService","getFilms","sort","a","b","starshipsService","starship_class","filterStarship","searchStarship","onSearchStarship","isNaN","Number","cost_in_credits","replace","crew","StarshipsService","getStarship","vehiclesService","vehicle_class","filterVehicles","searchVehicle","onSearchVehicle","onSliderValueChange","VehiclesService","getVehicles","reduce","filtered","starship","cost","costs","getCosts","maxCost","Math","speciesService","classification","filterSpecies","searchSpecies","average_height","average_lifespan","SpeciesService","getSpecies","planetsService","climate","filterPlanets","searchPlanet","onSearchPlanet","diameter","rotation_period","orbital_period","PlanetsService","getPlanets","planet","getDiameter","maxDiameter","SearchInput","inputStyle","imageStyle","Dropdown","pickerOptions","Picker","Item","label","selectedValue"],"mappings":"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","file":"static/js/app.589a32af.chunk.js","sourcesContent":["export default {\r\n  searchWindow: \"gray\",\r\n  picker: \"gray\",\r\n  textWhite: \"white\",\r\n  textBlue: \"#0091ff\",\r\n  borderWhite: \"white\",\r\n  mainBanana: \"#FFE81F\",\r\n  mainBackground: \"black\",\r\n};\r\n","import { IDataService } from \"./IDataService\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"; // eslint-disable-line\r\n\r\nexport class CacheService implements IDataService {\r\n  constructor(private baseService: IDataService) {}\r\n\r\n  public getData = async (endpoint: string): Promise<any> => {\r\n    const value = await AsyncStorage.getItem(endpoint);\r\n    if (value !== null) {\r\n      return JSON.parse(value);\r\n    }\r\n    const result = await this.baseService.getData(endpoint);\r\n    await AsyncStorage.setItem(endpoint, JSON.stringify(result));\r\n    return result;\r\n  };\r\n}\r\n","import { IDataService } from \"./IDataService\";\r\n\r\nexport class SwapiService implements IDataService {\r\n  private baseURL: string = \"https://swapi.dev/api/\";\r\n\r\n  public getData = async (endpoint: string) => {\r\n    if (endpoint.indexOf(this.baseURL) === -1) {\r\n      endpoint = this.baseURL + endpoint;\r\n    }\r\n    try {\r\n      const response = await fetch(endpoint);\r\n      const json = await response.json();\r\n      return json;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { Component } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { Slider } from \"@miblanchard/react-native-slider\";\r\nimport colors from \"../config/colors\";\r\n\r\ninterface IFilterSliderProps {\r\n  sliderValue: number;\r\n  max?: number;\r\n  min?: number;\r\n  onValueChange: (value) => void;\r\n  thumbTitle: string;\r\n}\r\n\r\nexport default class FilterSlider extends Component<IFilterSliderProps, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  private CustomThumb = () => (\r\n    <View style={styles.thumb}>\r\n      <Text>{this.props.thumbTitle}</Text>\r\n    </View>\r\n  );\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Slider\r\n          value={this.props.sliderValue}\r\n          animateTransitions\r\n          renderThumbComponent={this.CustomThumb}\r\n          trackStyle={styles.track}\r\n          maximumValue={this.props.max}\r\n          minimumValue={this.props.min}\r\n          onValueChange={this.props.onValueChange}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: 354,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"center\",\r\n  },\r\n  thumb: {\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.mainBanana,\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    width: 80,\r\n  },\r\n  track: {\r\n    borderRadius: 2,\r\n    height: 30,\r\n  },\r\n});\r\n","import React from \"react\";\nimport StartScreen from \"./app/screens/StartScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport People from \"./app/screens/People\";\nimport Details from \"./app/screens/Details\";\nimport { SwapiService } from \"./app/service/SwapiService\";\nimport { CacheService } from \"./app/service/CacheService\";\nimport Autenthication from \"./app/screens/Authentication\";\nimport colors from \"./app/config/colors\";\nimport Films from \"./app/screens/Films\";\nimport Starships from \"./app/screens/Starships\";\nimport Vehicles from \"./app/screens/Vehicles\";\nimport Species from \"./app/screens/Species\";\nimport Planets from \"./app/screens/Planets\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const swapiService = new CacheService(new SwapiService());\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Auth\"\n          component={Autenthication}\n          options={{\n            title: \"\",\n            headerStyle: {\n              backgroundColor: colors.mainBackground,\n            },\n          }}\n        />\n        <Stack.Screen\n          name=\"Start\"\n          component={StartScreen}\n          options={{\n            title: \"\",\n            headerStyle: {\n              backgroundColor: colors.mainBackground,\n            },\n          }}\n        />\n        <Stack.Screen\n          name=\"People\"\n          component={People}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Films\"\n          component={Films}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Starships\"\n          component={Starships}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Vehicles\"\n          component={Vehicles}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Species\"\n          component={Species}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Planets\"\n          component={Planets}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Details\"\n          component={Details}\n          initialParams={{ dataService: swapiService }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity as TouchableHighlight,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nexport default function StartScreen({ navigation }) {\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <Image source={require(\"../assets/grogu.png\")} />\r\n      <Text style={styles.header}>Endorpedia</Text>\r\n      <View style={styles.container}>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"People\")}\r\n          >\r\n            People\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Films\")}\r\n          >\r\n            Films\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Starships\")}\r\n          >\r\n            Starships\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Vehicles\")}\r\n          >\r\n            Vehicles\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Species\")}\r\n          >\r\n            Species\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Planets\")}\r\n          >\r\n            Planets\r\n          </Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    flex: 1,\r\n    backgroundColor: colors.mainBackground,\r\n    color: colors.textWhite,\r\n    alignItems: \"center\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    borderColor: colors.borderWhite,\r\n    borderWidth: 1,\r\n    width: 200,\r\n    height: 50,\r\n    padding: 15,\r\n    fontWeight: \"bold\",\r\n    color: colors.textWhite,\r\n  },\r\n  header: {\r\n    fontSize: 32,\r\n    fontWeight: \"600\",\r\n    padding: 10,\r\n    color: colors.mainBanana,\r\n    textShadowColor: \" rgba(255, 232, 31, 1)\",\r\n    textShadowOffset: { width: 3, height: 3 },\r\n    textShadowRadius: 19,\r\n  },\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/grogu.633152b2.png\";","import React, { Component } from \"react\";\r\nimport { ActivityIndicator, FlatList, View, StyleSheet } from \"react-native\";\r\nimport { IPerson } from \"../model/IPerson\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { PeopleService } from \"../service/PeopleService\";\r\nimport colors from \"../config/colors\";\r\nimport Card from \"../UI/Card\";\r\nimport { NavigationProp } from \"@react-navigation/native\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\n\r\ninterface State {\r\n  data: IPerson[];\r\n  originalData: IPerson[];\r\n  isLoading: boolean;\r\n  search: string;\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n}\r\n\r\ninterface IPeopleProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\nexport default class People extends Component<IPeopleProps, State> {\r\n  private peopleService: PeopleService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.peopleService = new PeopleService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n    };\r\n  }\r\n\r\n  private async getPeople() {\r\n    try {\r\n      const response: IDataSW<IPerson[]> = await this.peopleService.getPeople();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterPeople(this.state.pickerSelectedValue);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  private getNextPage = async (previousResponse: IDataSW<IPerson[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IPerson[]> = await this.peopleService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(combinedResults.map((item) => item.gender)),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterPeople(this.state.pickerSelectedValue);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  private searchPeople = async () => {\r\n    try {\r\n      const response: IDataSW<IPerson[]> =\r\n        await this.peopleService.searchPeople(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private goToDetails = (clickedItem) => {\r\n    this.props.navigation.navigate(\"Details\", {\r\n      details: clickedItem,\r\n    });\r\n  };\r\n\r\n  private onSearchPerson = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue });\r\n    this.filterPeople(pickerSelectedValue);\r\n  };\r\n\r\n  private filterPeople = (selectedOption) => {\r\n    if (selectedOption !== \"all\") {\r\n      let filteredData = this.state.originalData.filter(\r\n        (person) => person.gender === selectedOption\r\n      );\r\n      this.setState({ data: filteredData });\r\n    } else {\r\n      this.setState({ data: this.state.originalData });\r\n    }\r\n  };\r\n\r\n  private renderCard = (item) => {\r\n    return (\r\n      <Card\r\n        itemName={item.name}\r\n        propertyOne={[\"Gender\", item.gender]}\r\n        propertyTwo={[\"Birth year\", item.birth_year]}\r\n        propertyThree={[\"Height\", item.height + \" cm\"]}\r\n        onClick={() => this.goToDetails(item)}\r\n      ></Card>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getPeople();\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoading } = this.state;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <SearchInput\r\n          placeholderText={\"name\"}\r\n          onSearchInput={this.onSearchPerson}\r\n          searchItem={this.searchPeople}\r\n        />\r\n        <Dropdown\r\n          pickerData={[\"all\", ...this.state.pickerData]}\r\n          pickerSelectedValue={this.state.pickerSelectedValue}\r\n          onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n        />\r\n        {isLoading ? (\r\n          <ActivityIndicator />\r\n        ) : (\r\n          <FlatList\r\n            columnWrapperStyle={{ justifyContent: \"space-between\" }}\r\n            numColumns={2}\r\n            data={data}\r\n            keyExtractor={(item) => item.url}\r\n            extraData={data}\r\n            renderItem={({ item }) => this.renderCard(item)}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.mainBackground,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IPerson } from \"../model/IPerson\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class PeopleService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getPeople(): Promise<IDataSW<IPerson[]>> {\r\n    return this.dataService.getData(\"people\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IPerson[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchPeople(query: string) {\r\n    return this.dataService.getData(\"people/?search=\" + query);\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/searchIcon.ed97a9c5.png\";","import React, { Component } from \"react\";\r\nimport { Text, View, StyleSheet, TouchableHighlight } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\ninterface CardProps {\r\n  itemName: string;\r\n  propertyOne: string[] | string;\r\n  propertyTwo: string[] | string;\r\n  propertyThree: string[] | string;\r\n  onClick: () => void;\r\n}\r\n\r\nexport default class Card extends Component<CardProps, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <TouchableHighlight\r\n        style={styles.itemsList}\r\n        onPress={() => this.props.onClick()}\r\n      >\r\n        <View>\r\n          <Text style={[styles.item, styles.itemName]}>\r\n            {this.props.itemName}\r\n          </Text>\r\n          <Text style={styles.item}>\r\n            {this.props.propertyOne[0]}: {this.props.propertyOne[1]}\r\n          </Text>\r\n          <Text style={styles.item}>\r\n            {this.props.propertyTwo[0]}: {this.props.propertyTwo[1]}\r\n          </Text>\r\n          <Text style={styles.item}>\r\n            {this.props.propertyThree[0]}: {this.props.propertyThree[1]}\r\n          </Text>\r\n        </View>\r\n      </TouchableHighlight>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  itemsList: {\r\n    textAlign: \"center\",\r\n    borderColor: colors.borderWhite,\r\n    borderWidth: 1,\r\n    width: 170,\r\n    margin: 6,\r\n    padding: 15,\r\n  },\r\n  item: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    color: colors.textBlue,\r\n  },\r\n  itemName: {\r\n    textTransform: \"uppercase\",\r\n    fontSize: 14,\r\n    borderBottomColor: colors.borderWhite,\r\n    borderBottomWidth: 1,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport React, { Component } from \"react\";\r\nimport { Text, View, StyleSheet, FlatList } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { IDetails } from \"../model/IDetails\";\r\nimport { CacheService } from \"../service/CacheService\";\r\nimport { IDataService } from \"../service/IDataService\";\r\nimport { SwapiService } from \"../service/SwapiService\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\ninterface IDetailsProps {\r\n  route: RouteProp<any>;\r\n  navigation: any;\r\n}\r\n\r\ninterface State {\r\n  newDetails: IDetails;\r\n}\r\n\r\nexport default class Details extends Component<IDetailsProps, State> {\r\n  private dataService: IDataService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataService = new CacheService(new SwapiService());\r\n\r\n    this.state = {\r\n      newDetails: {},\r\n    };\r\n  }\r\n\r\n  private getDetail = async (url) => {\r\n    try {\r\n      const response = await this.dataService.getData(url);\r\n      return (\r\n        <Text\r\n          style={styles.detailValue}\r\n          onPress={() =>\r\n            this.props.navigation.push(\"Details\", {\r\n              details: response,\r\n            })\r\n          }\r\n        >\r\n          <Text>\r\n            {(response.name ? response.name : response.title) + \"   \"}\r\n          </Text>\r\n          <Icon style={{ fontSize: 16 }} name={\"arrow-circle-right\"}></Icon>\r\n        </Text>\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private renderDetail = (propName: string) => {\r\n    const header =\r\n      propName[0].toUpperCase() + propName.slice(1).replaceAll(\"_\", \" \");\r\n    if (propName.toLowerCase() === \"url\") return <></>;\r\n\r\n    return (\r\n      <View style={styles.details}>\r\n        <Text style={styles.detailName}>{header}:</Text>\r\n\r\n        {Array.isArray(this.state.newDetails[propName]) ? (\r\n          this.state.newDetails[propName].length > 0 ? (\r\n            <FlatList\r\n              data={this.state.newDetails[propName]}\r\n              keyExtractor={(_arrayItem, index) => index.toString()}\r\n              renderItem={({ item }) => <View>{item}</View>}\r\n            />\r\n          ) : (\r\n            <Text style={styles.detailValue}>{\"n/a\"}</Text>\r\n          )\r\n        ) : (\r\n          <Text style={styles.detailValue}>\r\n            {this.state.newDetails[propName]}\r\n          </Text>\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  async componentDidMount(): Promise<void> {\r\n    const { details } = this.props.route.params;\r\n    const newDetails = { ...details };\r\n\r\n    await Promise.all(\r\n      Object.keys(details).map(async (key) => {\r\n        if (\r\n          details[key].toString().includes(\"https\") &&\r\n          !Array.isArray(details[key])\r\n        ) {\r\n          newDetails[key] = await this.getDetail(details[key]);\r\n        }\r\n        if (Array.isArray(details[key])) {\r\n          await Promise.all(\r\n            details[key].map(\r\n              async (arrayItem, index) =>\r\n                (newDetails[key][index] = await this.getDetail(arrayItem))\r\n            )\r\n          );\r\n        }\r\n      })\r\n    );\r\n    this.setState({ newDetails: newDetails });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.detailsContainer}>\r\n        <FlatList\r\n          data={Object.keys(this.state.newDetails)}\r\n          keyExtractor={(item) => item}\r\n          renderItem={({ item }) => this.renderDetail(item)}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  detailsContainer: {\r\n    backgroundColor: colors.mainBackground,\r\n  },\r\n  details: {\r\n    flex: 1,\r\n    padding: 10,\r\n    paddingLeft: 25,\r\n    borderBottomColor: \"rgba(161, 161, 161, 0.4)\",\r\n    borderBottomWidth: 1,\r\n  },\r\n  detailName: {\r\n    color: colors.textBlue,\r\n    fontWeight: \"bold\",\r\n    lineHeight: 20,\r\n  },\r\n  detailValue: {\r\n    color: colors.textBlue,\r\n    lineHeight: 20,\r\n  },\r\n});\r\n","import { NavigationProp } from \"@react-navigation/native\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableHighlight,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport colors from \"../config/colors\";\r\nimport { Authenticator } from \"../service/Authenticator\";\r\n\r\ninterface AuthState {\r\n  login: string;\r\n  password: string;\r\n  icon: string;\r\n  isHidden: boolean;\r\n}\r\n\r\ninterface IAuthProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\n\r\nexport default class Autenthication extends Component<IAuthProps, AuthState> {\r\n  private authenticator = new Authenticator();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      login: \"\",\r\n      password: \"\",\r\n      icon: \"eye-slash\",\r\n      isHidden: true,\r\n    };\r\n  }\r\n  private changeIcon = () => {\r\n    this.setState((prevState) => ({\r\n      icon: prevState.icon === \"eye\" ? \"eye-slash\" : \"eye\",\r\n      isHidden: !prevState.isHidden,\r\n    }));\r\n  };\r\n\r\n  private onLogIn = () => {\r\n    if (this.state.login === \"Wooo\" && this.state.password === \"kiee\") {\r\n      this.authenticator.setToken();\r\n    }\r\n    throw \"Invalid login or password\";\r\n  };\r\n\r\n  async componentDidMount(): Promise<void> {\r\n    try {\r\n      const token = await this.authenticator.getToken();\r\n      if (token) {\r\n        this.props.navigation.navigate(\"Start\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ImageBackground\r\n          source={require(\"../assets/background.jpg\")}\r\n          resizeMode=\"cover\"\r\n          style={styles.imageBackground}\r\n        >\r\n          <View style={styles.content}>\r\n            <View style={styles.inputContainer}>\r\n              <TextInput\r\n                style={{ width: \"100%\" }}\r\n                placeholder={\"login\"}\r\n                onChangeText={(login) => this.setState({ login })}\r\n              />\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n              <TextInput\r\n                style={{ width: \"95%\" }}\r\n                secureTextEntry={this.state.isHidden}\r\n                placeholder={\"password\"}\r\n                onChangeText={(password) => this.setState({ password })}\r\n              />\r\n              <Icon\r\n                style={styles.iconStyle}\r\n                name={this.state.icon}\r\n                onPress={this.changeIcon}\r\n              ></Icon>\r\n            </View>\r\n            <TouchableHighlight\r\n              style={styles.logInButton}\r\n              onPress={this.onLogIn}\r\n            >\r\n              <Text style={styles.buttonText}>Log in</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  iconStyle: {\r\n    alignSelf: \"center\",\r\n    fontSize: 20,\r\n  },\r\n  imageBackground: {\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    alignItems: \"center\",\r\n    margin: 48,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    borderBottomWidth: 1,\r\n    backgroundColor: colors.searchWindow,\r\n    width: 354,\r\n    height: 50,\r\n    margin: 6,\r\n    padding: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n  logInButton: {\r\n    justifyContent: \"center\",\r\n    borderColor: colors.borderWhite,\r\n    backgroundColor: colors.mainBackground,\r\n    borderWidth: 1,\r\n    width: 170,\r\n    height: 50,\r\n    marginTop: 36,\r\n  },\r\n  buttonText: {\r\n    color: colors.textBlue,\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import * as SecureStore from \"expo-secure-store\";\r\nimport { Platform } from \"react-native\";\r\n\r\nexport class Authenticator {\r\n  public getToken = async (): Promise<string> => {\r\n    let token: string;\r\n    if (Platform.OS === \"web\") {\r\n      token = localStorage.getItem(\"secure_token\");\r\n    } else {\r\n      token = await SecureStore.getItemAsync(\"secure_token\");\r\n    }\r\n    return Promise.resolve(token);\r\n  };\r\n\r\n  public setToken() {\r\n    if (Platform.OS === \"web\") {\r\n      localStorage.setItem(\"secure_token\", \"gdaa23jjhk32lja\");\r\n    } else {\r\n      SecureStore.setItemAsync(\"secure_token\", \"gdaa23jjhk32lja\");\r\n    }\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/background.4c012343.jpg\";","import React, { Component } from \"react\";\r\nimport { ActivityIndicator, FlatList, View, StyleSheet } from \"react-native\";\r\nimport { IFilm } from \"../model/IFilm\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { FilmsService } from \"../service/FilmsService\";\r\nimport colors from \"../config/colors\";\r\nimport Card from \"../UI/Card\";\r\nimport { NavigationProp } from \"@react-navigation/native\";\r\n\r\ninterface State {\r\n  originalData: IFilm[];\r\n  isLoading: boolean;\r\n}\r\n\r\ninterface IFilmsProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\nexport default class Films extends Component<IFilmsProps, State> {\r\n  private filmsService: FilmsService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.filmsService = new FilmsService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      originalData: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  private async getFilms() {\r\n    try {\r\n      const response: IDataSW<IFilm[]> = await this.filmsService.getFilms();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  private getNextPage = async (previousResponse: IDataSW<IFilm[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IFilm[]> = await this.filmsService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [\r\n          ...this.state.originalData,\r\n          ...response.results,\r\n        ];\r\n        this.setState({ originalData: combinedResults }, () =>\r\n          this.getNextPage(response)\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  private goToDetails = (clickedItem) => {\r\n    this.props.navigation.navigate(\"Details\", {\r\n      details: clickedItem,\r\n    });\r\n  };\r\n\r\n  private romans = [0, \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"];\r\n\r\n  private renderCard = (item) => {\r\n    return (\r\n      <Card\r\n        itemName={item.title}\r\n        propertyOne={[\"Episode\", this.romans[item.episode_id].toLocaleString()]}\r\n        propertyTwo={[\"Director\", item.director]}\r\n        propertyThree={[\"Release date\", item.release_date]}\r\n        onClick={() => this.goToDetails(item)}\r\n      ></Card>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getFilms();\r\n  }\r\n\r\n  render() {\r\n    const { originalData, isLoading } = this.state;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        {isLoading ? (\r\n          <ActivityIndicator />\r\n        ) : (\r\n          <FlatList\r\n            data={originalData.sort((a, b) => a.episode_id - b.episode_id)}\r\n            keyExtractor={(item) => item.url}\r\n            extraData={originalData}\r\n            renderItem={({ item }) => this.renderCard(item)}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.mainBackground,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IFilm } from \"../model/IFilm\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class FilmsService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getFilms(): Promise<IDataSW<IFilm[]>> {\r\n    return this.dataService.getData(\"films\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IFilm[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ActivityIndicator, FlatList, View, StyleSheet } from \"react-native\";\r\nimport { IStarship } from \"../model/IStarship\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { StarshipsService } from \"../service/StarshipsService\";\r\nimport colors from \"../config/colors\";\r\nimport Card from \"../UI/Card\";\r\nimport { NavigationProp } from \"@react-navigation/native\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\n\r\ninterface State {\r\n  data: IStarship[];\r\n  originalData: IStarship[];\r\n  isLoading: boolean;\r\n  search: string;\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n}\r\n\r\ninterface IStarshipProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\nexport default class People extends Component<IStarshipProps, State> {\r\n  private starshipsService: StarshipsService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.starshipsService = new StarshipsService(\r\n      props.route.params.dataService\r\n    );\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n    };\r\n  }\r\n\r\n  private async getStarship() {\r\n    try {\r\n      const response: IDataSW<IStarship[]> =\r\n        await this.starshipsService.getStarship();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterStarship();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  private getNextPage = async (previousResponse: IDataSW<IStarship[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IStarship[]> =\r\n          await this.starshipsService.getMore(previousResponse.next);\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(\r\n                combinedResults.map((item) => item.starship_class.toLowerCase())\r\n              ),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterStarship();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  private searchStarship = async () => {\r\n    try {\r\n      const response: IDataSW<IStarship[]> =\r\n        await this.starshipsService.searchStarship(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private goToDetails = (clickedItem) => {\r\n    this.props.navigation.navigate(\"Details\", {\r\n      details: clickedItem,\r\n    });\r\n  };\r\n\r\n  private onSearchStarship = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue }, this.filterStarship);\r\n  };\r\n\r\n  private filterStarship = () => {\r\n    if (this.state.pickerSelectedValue !== \"all\") {\r\n      let filteredData = this.state.originalData.filter(\r\n        (item) =>\r\n          item.starship_class.toLowerCase() === this.state.pickerSelectedValue\r\n      );\r\n      this.setState({ data: filteredData });\r\n    } else {\r\n      this.setState({ data: this.state.originalData });\r\n    }\r\n  };\r\n\r\n  private renderCard = (item) => {\r\n    return (\r\n      <Card\r\n        itemName={item.name}\r\n        propertyOne={[\r\n          \"Cost in credits\",\r\n          !isNaN(Number(item.cost_in_credits))\r\n            ? Number(item.cost_in_credits).toLocaleString()\r\n            : item.cost_in_credits,\r\n        ]}\r\n        propertyTwo={[\r\n          \"Length\",\r\n          Number(item.length.replace(\".\", \"\")).toLocaleString(),\r\n        ]}\r\n        propertyThree={[\"Crew\", item.crew.replace(\",\", \" \")]}\r\n        onClick={() => this.goToDetails(item)}\r\n      ></Card>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getStarship();\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoading } = this.state;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <SearchInput\r\n          placeholderText={\"name or model\"}\r\n          onSearchInput={this.onSearchStarship}\r\n          searchItem={this.searchStarship}\r\n        />\r\n        <Dropdown\r\n          pickerData={[\"all\", ...this.state.pickerData]}\r\n          pickerSelectedValue={this.state.pickerSelectedValue}\r\n          onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n        />\r\n        {isLoading ? (\r\n          <ActivityIndicator />\r\n        ) : (\r\n          <FlatList\r\n            columnWrapperStyle={{ justifyContent: \"space-between\" }}\r\n            numColumns={2}\r\n            data={data}\r\n            keyExtractor={(item) => item.url}\r\n            extraData={data}\r\n            renderItem={({ item }) => this.renderCard(item)}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.mainBackground,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IStarship } from \"../model/IStarship\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class StarshipsService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getStarship(): Promise<IDataSW<IStarship[]>> {\r\n    return this.dataService.getData(\"starships\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IStarship[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchStarship(query: string) {\r\n    return this.dataService.getData(\"starships/?search=\" + query);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ActivityIndicator, FlatList, View, StyleSheet } from \"react-native\";\r\nimport { IVehicle } from \"../model/IVehicle\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { VehiclesService } from \"../service/VehiclesService\";\r\nimport colors from \"../config/colors\";\r\nimport Card from \"../UI/Card\";\r\nimport { NavigationProp } from \"@react-navigation/native\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\nimport FilterSlider from \"../UI/FilterSlider\";\r\n\r\ninterface State {\r\n  data: IVehicle[];\r\n  originalData: IVehicle[];\r\n  isLoading: boolean;\r\n  search: string;\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n  sliderValue: number;\r\n}\r\n\r\ninterface IVehiclesProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\nexport default class Vehicles extends Component<IVehiclesProps, State> {\r\n  private vehiclesService: VehiclesService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.vehiclesService = new VehiclesService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n      sliderValue: 0,\r\n    };\r\n  }\r\n\r\n  private async getVehicles() {\r\n    try {\r\n      const response: IDataSW<IVehicle[]> =\r\n        await this.vehiclesService.getVehicles();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterVehicles();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  private getNextPage = async (previousResponse: IDataSW<IVehicle[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IVehicle[]> =\r\n          await this.vehiclesService.getMore(previousResponse.next);\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(\r\n                combinedResults.map((item) => item.vehicle_class.toLowerCase())\r\n              ),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterVehicles();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  private searchVehicle = async () => {\r\n    try {\r\n      const response: IDataSW<IVehicle[]> =\r\n        await this.vehiclesService.searchVehicle(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private goToDetails = (clickedItem) => {\r\n    this.props.navigation.navigate(\"Details\", {\r\n      details: clickedItem,\r\n    });\r\n  };\r\n\r\n  private onSearchVehicle = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue }, this.filterVehicles);\r\n  };\r\n\r\n  private filterVehicles = () => {\r\n    let filteredData = this.state.originalData;\r\n    if (this.state.pickerSelectedValue !== \"all\") {\r\n      filteredData = filteredData.filter(\r\n        (item) =>\r\n          item.vehicle_class.toLowerCase() === this.state.pickerSelectedValue\r\n      );\r\n    }\r\n    filteredData = filteredData.filter((item) => {\r\n      if (item.cost_in_credits === \"unknown\" && this.state.sliderValue === 0)\r\n        return item;\r\n      if (\r\n        Number(item.cost_in_credits.replace(\",\", \"\")) >= this.state.sliderValue\r\n      ) {\r\n        return item;\r\n      }\r\n    });\r\n    this.setState({ data: filteredData });\r\n  };\r\n\r\n  private onSliderValueChange = (value: number) => {\r\n    this.setState({ sliderValue: value[0] }, this.filterVehicles);\r\n  };\r\n\r\n  private getCosts(data: IVehicle[]): number[] {\r\n    const costs: number[] = data.reduce((filtered, starship) => {\r\n      const cost = Number(starship.cost_in_credits);\r\n      if (!isNaN(cost)) {\r\n        filtered.push(cost);\r\n      }\r\n      return filtered;\r\n    }, []);\r\n    return costs;\r\n  }\r\n\r\n  private renderCard = (item) => {\r\n    return (\r\n      <Card\r\n        itemName={item.name}\r\n        propertyOne={[\r\n          \"Cost in credits\",\r\n          !isNaN(Number(item.cost_in_credits))\r\n            ? Number(item.cost_in_credits).toLocaleString()\r\n            : item.cost_in_credits,\r\n        ]}\r\n        propertyTwo={[\r\n          \"Length\",\r\n          Number(item.length.replace(\".\", \"\")).toLocaleString(),\r\n        ]}\r\n        propertyThree={[\"Crew\", item.crew.replace(\",\", \" \")]}\r\n        onClick={() => this.goToDetails(item)}\r\n      ></Card>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getVehicles();\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoading } = this.state;\r\n    const costs: number[] = this.getCosts(data);\r\n    const maxCost = costs.length > 0 ? Math.max(...costs) : 100;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <SearchInput\r\n          placeholderText={\"name or model\"}\r\n          onSearchInput={this.onSearchVehicle}\r\n          searchItem={this.searchVehicle}\r\n        />\r\n        <Dropdown\r\n          pickerData={[\"all\", ...this.state.pickerData]}\r\n          pickerSelectedValue={this.state.pickerSelectedValue}\r\n          onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n        />\r\n        <FilterSlider\r\n          thumbTitle={\"Cost in credits\"}\r\n          sliderValue={this.state.sliderValue}\r\n          max={maxCost}\r\n          min={0}\r\n          onValueChange={this.onSliderValueChange}\r\n        />\r\n        {isLoading ? (\r\n          <ActivityIndicator />\r\n        ) : (\r\n          <FlatList\r\n            columnWrapperStyle={{ justifyContent: \"space-between\" }}\r\n            numColumns={2}\r\n            data={data}\r\n            keyExtractor={(item) => item.url}\r\n            extraData={data}\r\n            renderItem={({ item }) => this.renderCard(item)}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    backgroundColor: colors.mainBackground,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IVehicle } from \"../model/IVehicle\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class VehiclesService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getVehicles(): Promise<IDataSW<IVehicle[]>> {\r\n    return this.dataService.getData(\"vehicles\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IVehicle[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchVehicle(query: string) {\r\n    return this.dataService.getData(\"vehicles/?search=\" + query);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ActivityIndicator, FlatList, View, StyleSheet } from \"react-native\";\r\nimport { ISpecies } from \"../model/ISpecies\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { SpeciesService } from \"../service/SpeciesService\";\r\nimport colors from \"../config/colors\";\r\nimport Card from \"../UI/Card\";\r\nimport { NavigationProp } from \"@react-navigation/native\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\n\r\ninterface State {\r\n  data: ISpecies[];\r\n  originalData: ISpecies[];\r\n  isLoading: boolean;\r\n  search: string;\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n}\r\n\r\ninterface ISpeciesProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\nexport default class Species extends Component<ISpeciesProps, State> {\r\n  private speciesService: SpeciesService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.speciesService = new SpeciesService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n    };\r\n  }\r\n\r\n  private async getSpecies() {\r\n    try {\r\n      const response: IDataSW<ISpecies[]> =\r\n        await this.speciesService.getSpecies();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterSpecies(this.state.pickerSelectedValue);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  private getNextPage = async (previousResponse: IDataSW<ISpecies[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<ISpecies[]> = await this.speciesService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(combinedResults.map((item) => item.classification)),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterSpecies(this.state.pickerSelectedValue);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  private searchSpecies = async () => {\r\n    try {\r\n      const response: IDataSW<ISpecies[]> =\r\n        await this.speciesService.searchSpecies(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private goToDetails = (clickedItem) => {\r\n    this.props.navigation.navigate(\"Details\", {\r\n      details: clickedItem,\r\n    });\r\n  };\r\n\r\n  private onSearchPerson = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue });\r\n    this.filterSpecies(pickerSelectedValue);\r\n  };\r\n\r\n  private filterSpecies = (selectedOption) => {\r\n    if (selectedOption !== \"all\") {\r\n      let filteredData = this.state.originalData.filter(\r\n        (item) => item.classification === selectedOption\r\n      );\r\n      this.setState({ data: filteredData });\r\n    } else {\r\n      this.setState({ data: this.state.originalData });\r\n    }\r\n  };\r\n\r\n  private renderCard = (item) => {\r\n    return (\r\n      <Card\r\n        itemName={item.name}\r\n        propertyOne={[\"Classification\", item.classification]}\r\n        propertyTwo={[\"Average height\", item.average_height]}\r\n        propertyThree={[\"Average lifespan\", item.average_lifespan]}\r\n        onClick={() => this.goToDetails(item)}\r\n      ></Card>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getSpecies();\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoading } = this.state;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <SearchInput\r\n          placeholderText={\"name\"}\r\n          onSearchInput={this.onSearchPerson}\r\n          searchItem={this.searchSpecies}\r\n        />\r\n        <Dropdown\r\n          pickerData={[\"all\", ...this.state.pickerData]}\r\n          pickerSelectedValue={this.state.pickerSelectedValue}\r\n          onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n        />\r\n        {isLoading ? (\r\n          <ActivityIndicator />\r\n        ) : (\r\n          <FlatList\r\n            columnWrapperStyle={{ justifyContent: \"space-between\" }}\r\n            numColumns={2}\r\n            data={data}\r\n            keyExtractor={(item) => item.url}\r\n            extraData={data}\r\n            renderItem={({ item }) => this.renderCard(item)}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.mainBackground,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { IDataService } from \"./IDataService\";\r\nimport { ISpecies } from \"../model/ISpecies\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class SpeciesService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getSpecies(): Promise<IDataSW<ISpecies[]>> {\r\n    return this.dataService.getData(\"species\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<ISpecies[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchSpecies(query: string) {\r\n    return this.dataService.getData(\"species/?search=\" + query);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ActivityIndicator, FlatList, View, StyleSheet } from \"react-native\";\r\nimport { IPlanet } from \"../model/IPlanet\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { PlanetsService } from \"../service/PlanetsService\";\r\nimport colors from \"../config/colors\";\r\nimport Card from \"../UI/Card\";\r\nimport { NavigationProp } from \"@react-navigation/native\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\nimport FilterSlider from \"../UI/FilterSlider\";\r\n\r\ninterface State {\r\n  data: IPlanet[];\r\n  originalData: IPlanet[];\r\n  isLoading: boolean;\r\n  search: string;\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n  sliderValue: number;\r\n}\r\n\r\ninterface IPlanetsProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\nexport default class People extends Component<IPlanetsProps, State> {\r\n  private planetsService: PlanetsService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.planetsService = new PlanetsService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n      sliderValue: 0,\r\n    };\r\n  }\r\n\r\n  private async getPlanets() {\r\n    try {\r\n      const response: IDataSW<IPlanet[]> =\r\n        await this.planetsService.getPlanets();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterPlanets();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  private getNextPage = async (previousResponse: IDataSW<IPlanet[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IPlanet[]> = await this.planetsService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(combinedResults.map((item) => item.climate)),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterPlanets();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  private searchPlanet = async () => {\r\n    try {\r\n      const response: IDataSW<IPlanet[]> =\r\n        await this.planetsService.searchPlanet(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private goToDetails = (clickedItem) => {\r\n    this.props.navigation.navigate(\"Details\", {\r\n      details: clickedItem,\r\n    });\r\n  };\r\n\r\n  private onSearchPlanet = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue }, this.filterPlanets);\r\n  };\r\n\r\n  private filterPlanets = () => {\r\n    let filteredData = this.state.originalData;\r\n    if (this.state.pickerSelectedValue !== \"all\") {\r\n      filteredData = filteredData.filter(\r\n        (item) => item.climate.toLowerCase() === this.state.pickerSelectedValue\r\n      );\r\n    }\r\n    filteredData = filteredData.filter((item) => {\r\n      if (item.diameter === \"unknown\" && this.state.sliderValue === 0)\r\n        return item;\r\n      if (Number(item.diameter.replace(\",\", \"\")) >= this.state.sliderValue) {\r\n        return item;\r\n      }\r\n    });\r\n    this.setState({ data: filteredData });\r\n  };\r\n\r\n  private onSliderValueChange = (value: number) => {\r\n    this.setState({ sliderValue: value[0] }, this.filterPlanets);\r\n  };\r\n\r\n  private getDiameter(data: IPlanet[]): number[] {\r\n    const diameters: number[] = data.reduce((filtered, planet) => {\r\n      const diameter = Number(planet.diameter);\r\n      if (!isNaN(diameter)) {\r\n        filtered.push(diameter);\r\n      }\r\n      return filtered;\r\n    }, []);\r\n    return diameters;\r\n  }\r\n\r\n  private renderCard = (item) => {\r\n    return (\r\n      <Card\r\n        itemName={item.name}\r\n        propertyOne={[\r\n          \"Diameter\",\r\n          !isNaN(Number(item.diameter))\r\n            ? Number(item.diameter).toLocaleString()\r\n            : item.diameter,\r\n        ]}\r\n        propertyTwo={[\"Rotation period\", item.rotation_period]}\r\n        propertyThree={[\"Orbital period\", item.orbital_period]}\r\n        onClick={() => this.goToDetails(item)}\r\n      ></Card>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getPlanets();\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoading } = this.state;\r\n    const diameter: number[] = this.getDiameter(data);\r\n    const maxDiameter = diameter.length > 0 ? Math.max(...diameter) : 100;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <SearchInput\r\n          placeholderText={\"name\"}\r\n          onSearchInput={this.onSearchPlanet}\r\n          searchItem={this.searchPlanet}\r\n        />\r\n        <Dropdown\r\n          pickerData={[\"all\", ...this.state.pickerData]}\r\n          pickerSelectedValue={this.state.pickerSelectedValue}\r\n          onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n        />\r\n        <FilterSlider\r\n          thumbTitle={\"Diameter\"}\r\n          sliderValue={this.state.sliderValue}\r\n          max={maxDiameter}\r\n          min={0}\r\n          onValueChange={this.onSliderValueChange}\r\n        />\r\n        {isLoading ? (\r\n          <ActivityIndicator />\r\n        ) : (\r\n          <FlatList\r\n            columnWrapperStyle={{ justifyContent: \"space-between\" }}\r\n            numColumns={2}\r\n            data={data}\r\n            keyExtractor={(item) => item.url}\r\n            extraData={data}\r\n            renderItem={({ item }) => this.renderCard(item)}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.mainBackground,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IPlanet } from \"../model/IPlanet\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class PlanetsService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getPlanets(): Promise<IDataSW<IPlanet[]>> {\r\n    return this.dataService.getData(\"planets\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IPlanet[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchPlanet(query: string) {\r\n    return this.dataService.getData(\"planet/?search=\" + query);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  StyleSheet,\r\n  TouchableHighlight,\r\n  Image,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\ninterface InputProps {\r\n  placeholderText: string;\r\n  onSearchInput: (search: string) => void;\r\n  searchItem: () => void;\r\n}\r\n\r\nexport default class SearchInput extends Component<InputProps, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          placeholder={this.props.placeholderText}\r\n          style={styles.inputStyle}\r\n          onChangeText={(search) => this.props.onSearchInput(search)}\r\n        />\r\n        <TouchableHighlight onPress={this.props.searchItem}>\r\n          <Image\r\n            style={styles.imageStyle}\r\n            source={require(\"../assets/searchIcon.png\")}\r\n          />\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    borderBottomWidth: 1,\r\n    backgroundColor: colors.searchWindow,\r\n    width: 354,\r\n    height: 50,\r\n    margin: 6,\r\n    padding: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n  inputStyle: { flex: 1 },\r\n  imageStyle: {\r\n    margin: 3,\r\n    height: 15,\r\n    width: 15,\r\n    resizeMode: \"stretch\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { View, StyleSheet } from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport colors from \"../config/colors\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\ninterface PickerProps {\r\n  pickerData: string[];\r\n  pickerSelectedValue: string;\r\n  onSetPickerSelectedValue: (pickerSelectedValue) => void;\r\n}\r\n\r\nexport default class Dropdown extends Component<PickerProps, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let pickerOptions = this.props.pickerData.map(function (item) {\r\n      return <Picker.Item key={item} value={item} label={item} />;\r\n    });\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Picker\r\n          selectedValue={this.props.pickerSelectedValue}\r\n          style={styles.picker}\r\n          onValueChange={this.props.onSetPickerSelectedValue}\r\n        >\r\n          {pickerOptions}\r\n        </Picker>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n  },\r\n  picker: { height: 50, width: 170, backgroundColor: colors.picker },\r\n});\r\n"],"sourceRoot":""}