{"version":3,"sources":["app/service/CacheService.ts","app/service/SwapiService.ts","app/UI/FilterSlider.tsx","app/config/colors.ts","App.tsx","app/screens/StartScreen.tsx","app/assets/grogu.png","app/screens/People.tsx","app/service/PeopleService.ts","app/assets/searchIcon.png","app/screens/Base.tsx","app/UI/Card.tsx","app/screens/Details.tsx","app/UI/SearchInput.tsx","app/screens/Authentication.tsx","app/service/Authenticator.ts","app/assets/background.jpg","app/screens/Films.tsx","app/service/FilmsService.ts","app/screens/Starships.tsx","app/service/StarshipsService.ts","app/screens/Vehicles.tsx","app/service/VehiclesService.ts","app/screens/Species.tsx","app/service/SpeciesService.ts","app/screens/Planets.tsx","app/service/PlanetsService.ts","app/UI/Dropdown.tsx","app/UI/ResetFiltersBtn.tsx"],"names":["CacheService","baseService","getData","endpoint","async","AsyncStorage","getItem","value","JSON","parse","result","setItem","stringify","SwapiService","baseURL","indexOf","fetch","response","json","console","log","FilterSlider","props","CustomThumb","style","styles","thumb","thumbTitle","container","Slider","this","sliderValue","animateTransitions","renderThumbComponent","trackStyle","track","maximumValue","max","minimumValue","min","onValueChange","Component","StyleSheet","create","width","marginLeft","marginRight","marginTop","marginBottom","alignItems","justifyContent","backgroundColor","colors","mainBanana","height","borderRadius","searchWindow","picker","textWhite","textBlue","borderWhite","mainBackground","swapiService","NavigationContainer","Stack","Navigator","Screen","name","component","Autenthication","options","title","headerStyle","StartScreen","People","initialParams","dataService","Films","Starships","Vehicles","Species","Planets","Details","createNativeStackNavigator","navigation","mainContainer","source","require","header","text","onPress","navigate","flex","color","textAlign","borderColor","borderWidth","padding","fontWeight","fontSize","textShadowColor","textShadowOffset","textShadowRadius","module","exports","getNextPage","previousResponse","next","detailsService","getMore","combinedResults","state","data","results","setState","originalData","pickerData","Set","map","item","gender","filterDetails","searchDetail","searchPeople","search","onSetPickerSelectedValue","pickerSelectedValue","filteredData","filter","filterItem","renderItemContent","birth_year","resetFilters","PeopleService","route","params","isLoading","getPeople","placeholderText","onSearchInput","onSearchDetail","searchItem","flexDirection","onResetFilters","Base","nextURL","query","goToDetails","clickedItem","details","renderCard","itemName","undefined","properties","onClick","renderCustomFilters","columnWrapperStyle","numColumns","keyExtractor","url","extraData","renderItem","Card","itemsList","margin","textTransform","borderBottomColor","borderBottomWidth","getDetail","detailValue","push","renderMultilineProperty","array","length","_arrayItem","index","toString","renderDetail","propName","toUpperCase","slice","replaceAll","toLowerCase","detailName","Array","isArray","newDetails","Promise","all","Object","keys","key","includes","arrayItem","detailsContainer","paddingLeft","lineHeight","SearchInput","inputContainer","placeholder","inputStyle","onChangeText","imageStyle","resizeMode","authenticator","Authenticator","changeIcon","prevState","icon","isHidden","onLogIn","setToken","login","password","invalidLogIn","e","getToken","imageBackground","content","loginErrorMsg","secureTextEntry","iconStyle","logInButton","buttonText","alignSelf","Platform","OS","token","localStorage","SecureStore","getItemAsync","resolve","setItemAsync","romans","episode_id","toLocaleString","director","release_date","FilmsService","getFilms","starship_class","searchStarship","isNaN","Number","cost_in_credits","replace","crew","StarshipsService","getStarship","vehicle_class","searchVehicle","onSliderValueChange","maxCost","costs","getCosts","Math","VehiclesService","getVehicles","reduce","filtered","starship","cost","classification","searchSpecies","average_height","average_lifespan","SpeciesService","getSpecies","climate","searchPlanet","diameter","maxDiameter","getDiameter","rotation_period","orbital_period","PlanetsService","getPlanets","planet","Dropdown","pickerOptions","Picker","Item","label","selectedValue","ResetFilterBtn"],"mappings":"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","file":"static/js/app.09b232f2.chunk.js","sourcesContent":["import { IDataService } from \"./IDataService\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"; // eslint-disable-line\r\n\r\nexport class CacheService implements IDataService {\r\n  constructor(private baseService: IDataService) {}\r\n\r\n  public getData = async (endpoint: string): Promise<any> => {\r\n    const value = await AsyncStorage.getItem(endpoint);\r\n    if (value !== null) {\r\n      return JSON.parse(value);\r\n    }\r\n    const result = await this.baseService.getData(endpoint);\r\n    await AsyncStorage.setItem(endpoint, JSON.stringify(result));\r\n    return result;\r\n  };\r\n}\r\n","import { IDataService } from \"./IDataService\";\r\n\r\nexport class SwapiService implements IDataService {\r\n  private baseURL: string = \"https://swapi.dev/api/\";\r\n\r\n  public getData = async (endpoint: string) => {\r\n    if (endpoint.indexOf(this.baseURL) === -1) {\r\n      endpoint = this.baseURL + endpoint;\r\n    }\r\n    try {\r\n      const response = await fetch(endpoint);\r\n      const json = await response.json();\r\n      return json;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { Slider } from \"@miblanchard/react-native-slider\";\r\nimport colors from \"../config/colors\";\r\n\r\ninterface IFilterSliderProps {\r\n  sliderValue: number;\r\n  max?: number;\r\n  min?: number;\r\n  onValueChange: (value) => void;\r\n  thumbTitle: string;\r\n}\r\n\r\nexport default class FilterSlider extends Component<IFilterSliderProps, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  private CustomThumb = () => (\r\n    <View style={styles.thumb}>\r\n      <Text>{this.props.thumbTitle}</Text>\r\n    </View>\r\n  );\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Slider\r\n          value={this.props.sliderValue}\r\n          animateTransitions\r\n          renderThumbComponent={this.CustomThumb}\r\n          trackStyle={styles.track}\r\n          maximumValue={this.props.max}\r\n          minimumValue={this.props.min}\r\n          onValueChange={this.props.onValueChange}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: 354,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"center\",\r\n  },\r\n  thumb: {\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.mainBanana,\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    width: 80,\r\n  },\r\n  track: {\r\n    borderRadius: 2,\r\n    height: 30,\r\n  },\r\n});\r\n","export default {\r\n  searchWindow: \"gray\",\r\n  picker: \"gray\",\r\n  textWhite: \"white\",\r\n  textBlue: \"#0091ff\",\r\n  borderWhite: \"white\",\r\n  mainBanana: \"#FFE81F\",\r\n  mainBackground: \"black\",\r\n};\r\n","import React from \"react\";\nimport StartScreen from \"./app/screens/StartScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport People from \"./app/screens/People\";\nimport Details from \"./app/screens/Details\";\nimport { SwapiService } from \"./app/service/SwapiService\";\nimport { CacheService } from \"./app/service/CacheService\";\nimport Autenthication from \"./app/screens/Authentication\";\nimport colors from \"./app/config/colors\";\nimport Films from \"./app/screens/Films\";\nimport Starships from \"./app/screens/Starships\";\nimport Vehicles from \"./app/screens/Vehicles\";\nimport Species from \"./app/screens/Species\";\nimport Planets from \"./app/screens/Planets\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const swapiService = new CacheService(new SwapiService());\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Auth\"\n          component={Autenthication}\n          options={{\n            title: \"\",\n            headerStyle: {\n              backgroundColor: colors.mainBackground,\n            },\n          }}\n        />\n        <Stack.Screen\n          name=\"Start\"\n          component={StartScreen}\n          options={{\n            title: \"\",\n            headerStyle: {\n              backgroundColor: colors.mainBackground,\n            },\n          }}\n        />\n        <Stack.Screen\n          name=\"People\"\n          component={People}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Films\"\n          component={Films}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Starships\"\n          component={Starships}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Vehicles\"\n          component={Vehicles}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Species\"\n          component={Species}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Planets\"\n          component={Planets}\n          initialParams={{ dataService: swapiService }}\n        />\n        <Stack.Screen\n          name=\"Details\"\n          component={Details}\n          initialParams={{ dataService: swapiService }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity as TouchableHighlight,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nexport default function StartScreen({ navigation }) {\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <Image source={require(\"../assets/grogu.png\")} />\r\n      <Text style={styles.header}>Endorpedia</Text>\r\n      <View style={styles.container}>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"People\")}\r\n          >\r\n            People\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Films\")}\r\n          >\r\n            Films\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Starships\")}\r\n          >\r\n            Starships\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Vehicles\")}\r\n          >\r\n            Vehicles\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Species\")}\r\n          >\r\n            Species\r\n          </Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight>\r\n          <Text\r\n            style={styles.text}\r\n            onPress={() => navigation.navigate(\"Planets\")}\r\n          >\r\n            Planets\r\n          </Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    flex: 1,\r\n    backgroundColor: colors.mainBackground,\r\n    color: colors.textWhite,\r\n    alignItems: \"center\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    borderColor: colors.borderWhite,\r\n    borderWidth: 1,\r\n    width: 200,\r\n    height: 50,\r\n    padding: 15,\r\n    fontWeight: \"bold\",\r\n    color: colors.textWhite,\r\n  },\r\n  header: {\r\n    fontSize: 32,\r\n    fontWeight: \"600\",\r\n    padding: 10,\r\n    color: colors.mainBanana,\r\n    textShadowColor: \" rgba(255, 232, 31, 1)\",\r\n    textShadowOffset: { width: 3, height: 3 },\r\n    textShadowRadius: 19,\r\n  },\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/grogu.633152b2.png\";","import React from \"react\";\r\nimport { Text, TouchableHighlight, StyleSheet, View } from \"react-native\";\r\nimport { IPerson } from \"../model/IPerson\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { PeopleService } from \"../service/PeopleService\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\nimport Base, { BaseState } from \"./Base\";\r\nimport colors from \"../config/colors\";\r\nimport ResetFilterBtn from \"../UI/ResetFiltersBtn\";\r\n\r\ninterface State extends BaseState {\r\n  data: IPerson[];\r\n  originalData: IPerson[];\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n}\r\n\r\nexport default class People extends Base<State> {\r\n  protected detailsService: PeopleService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.detailsService = new PeopleService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n    };\r\n  }\r\n\r\n  protected async getData() {\r\n    try {\r\n      const response: IDataSW<IPerson[]> =\r\n        await this.detailsService.getPeople();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterDetails();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  protected getNextPage = async (previousResponse: IDataSW<IPerson[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IPerson[]> = await this.detailsService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(combinedResults.map((item) => item.gender)),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterDetails();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  protected searchDetail = async () => {\r\n    try {\r\n      const response: IDataSW<IPerson[]> =\r\n        await this.detailsService.searchPeople(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue }, this.filterDetails);\r\n  };\r\n\r\n  protected filterDetails = () => {\r\n    if (this.state.pickerSelectedValue !== \"all\") {\r\n      let filteredData = this.state.originalData.filter(\r\n        (filterItem) => filterItem.gender === this.state.pickerSelectedValue\r\n      );\r\n      this.setState({ data: filteredData });\r\n    } else {\r\n      this.setState({ data: this.state.originalData });\r\n    }\r\n  };\r\n\r\n  protected renderItemContent = (item) => {\r\n    return [\r\n      [\"Gender\", item.gender],\r\n      [\"Birth year\", item.birth_year],\r\n      [\"Height\", item.height + \" cm\"],\r\n    ];\r\n  };\r\n\r\n  private resetFilters = () => {\r\n    this.setState({\r\n      data: this.state.originalData,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n    });\r\n  };\r\n\r\n  protected renderCustomFilters() {\r\n    return (\r\n      <>\r\n        <SearchInput\r\n          placeholderText={\"name\"}\r\n          onSearchInput={this.onSearchDetail}\r\n          searchItem={this.searchDetail}\r\n        />\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <Dropdown\r\n            pickerData={[\"all\", ...this.state.pickerData]}\r\n            pickerSelectedValue={this.state.pickerSelectedValue}\r\n            onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n          />\r\n          <ResetFilterBtn onResetFilters={this.resetFilters} />\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IPerson } from \"../model/IPerson\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class PeopleService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getPeople(): Promise<IDataSW<IPerson[]>> {\r\n    return this.dataService.getData(\"people\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IPerson[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchPeople(query: string) {\r\n    return this.dataService.getData(\"people/?search=\" + query);\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/searchIcon.ed97a9c5.png\";","import React, { Component } from \"react\";\r\nimport { ActivityIndicator, FlatList, View, StyleSheet } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport Card from \"../UI/Card\";\r\nimport { NavigationProp } from \"@react-navigation/native\";\r\n\r\nexport interface BaseState {\r\n  data: any[];\r\n  originalData?: any[];\r\n  isLoading: boolean;\r\n  search?: string;\r\n}\r\n\r\ninterface BaseStateProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\nexport default abstract class Base<T extends BaseState> extends Component<\r\n  BaseStateProps,\r\n  T\r\n> {\r\n  protected abstract detailsService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ...this.state,\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n    };\r\n  }\r\n\r\n  protected abstract getData(): Promise<void>;\r\n\r\n  protected abstract searchDetail(): Promise<void>;\r\n\r\n  private goToDetails = (clickedItem) => {\r\n    this.props.navigation.navigate(\"Details\", {\r\n      details: clickedItem,\r\n    });\r\n  };\r\n\r\n  protected onSearchDetail = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  protected abstract renderItemContent(item: any): string[][];\r\n\r\n  private renderCard = (item) => {\r\n    return (\r\n      <Card\r\n        itemName={item.name === undefined ? item.title : item.name}\r\n        properties={this.renderItemContent(item)}\r\n        onClick={() => this.goToDetails(item)}\r\n      ></Card>\r\n    );\r\n  };\r\n\r\n  protected renderCustomFilters() {\r\n    return null;\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  public render() {\r\n    const { data, isLoading } = this.state;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.renderCustomFilters()}\r\n        {isLoading ? (\r\n          <ActivityIndicator />\r\n        ) : (\r\n          <FlatList\r\n            columnWrapperStyle={{ justifyContent: \"space-between\" }}\r\n            numColumns={2}\r\n            data={data}\r\n            keyExtractor={(item) => item.url}\r\n            extraData={data}\r\n            renderItem={({ item }) => this.renderCard(item)}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.mainBackground,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Text, View, StyleSheet, TouchableHighlight } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\ninterface CardProps {\r\n  itemName: string;\r\n  properties: string[][];\r\n  onClick: () => void;\r\n}\r\n\r\nexport default class Card extends Component<CardProps, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <TouchableHighlight\r\n        style={styles.itemsList}\r\n        onPress={() => this.props.onClick()}\r\n      >\r\n        <View>\r\n          <Text style={[styles.item, styles.itemName]}>\r\n            {this.props.itemName}\r\n          </Text>\r\n          <Text style={styles.item}>\r\n            {this.props.properties[0][0]}: {this.props.properties[0][1]}\r\n          </Text>\r\n          <Text style={styles.item}>\r\n            {this.props.properties[1][0]}: {this.props.properties[1][1]}\r\n          </Text>\r\n          <Text style={styles.item}>\r\n            {this.props.properties[2][0]}: {this.props.properties[2][1]}\r\n          </Text>\r\n        </View>\r\n      </TouchableHighlight>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  itemsList: {\r\n    textAlign: \"center\",\r\n    borderColor: colors.borderWhite,\r\n    borderWidth: 1,\r\n    width: 170,\r\n    margin: 6,\r\n    padding: 15,\r\n  },\r\n  item: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    color: colors.textBlue,\r\n  },\r\n  itemName: {\r\n    textTransform: \"uppercase\",\r\n    fontSize: 14,\r\n    borderBottomColor: colors.borderWhite,\r\n    borderBottomWidth: 1,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport React, { Component } from \"react\";\r\nimport { Text, View, StyleSheet, FlatList } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { IDetails } from \"../model/IDetails\";\r\nimport { CacheService } from \"../service/CacheService\";\r\nimport { IDataService } from \"../service/IDataService\";\r\nimport { SwapiService } from \"../service/SwapiService\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\ninterface IDetailsProps {\r\n  route: RouteProp<any>;\r\n  navigation: any;\r\n}\r\n\r\ninterface State {\r\n  newDetails: IDetails;\r\n}\r\n\r\nexport default class Details extends Component<IDetailsProps, State> {\r\n  private dataService: IDataService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataService = new CacheService(new SwapiService());\r\n\r\n    this.state = {\r\n      newDetails: {},\r\n    };\r\n  }\r\n\r\n  private getDetail = async (url) => {\r\n    try {\r\n      const response = await this.dataService.getData(url);\r\n      return (\r\n        <Text\r\n          style={styles.detailValue}\r\n          onPress={() =>\r\n            this.props.navigation.push(\"Details\", {\r\n              details: response,\r\n            })\r\n          }\r\n        >\r\n          <Text>\r\n            {(response.name ? response.name : response.title) + \"   \"}\r\n          </Text>\r\n          <Icon style={{ fontSize: 16 }} name={\"arrow-circle-right\"}></Icon>\r\n        </Text>\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private renderMultilineProperty = (array) => {\r\n    return array.length > 0 ? (\r\n      <FlatList\r\n        data={array}\r\n        keyExtractor={(_arrayItem, index) => index.toString()}\r\n        renderItem={({ item }) => <View>{item}</View>}\r\n      />\r\n    ) : (\r\n      <Text style={styles.detailValue}>{\"n/a\"}</Text>\r\n    );\r\n  };\r\n\r\n  private renderDetail = (propName: string) => {\r\n    const header =\r\n      propName[0].toUpperCase() + propName.slice(1).replaceAll(\"_\", \" \");\r\n    if (propName.toLowerCase() === \"url\") return <></>;\r\n\r\n    return (\r\n      <View style={styles.details}>\r\n        <Text style={styles.detailName}>{header}:</Text>\r\n        {Array.isArray(this.state.newDetails[propName]) ? (\r\n          this.renderMultilineProperty(this.state.newDetails[propName])\r\n        ) : (\r\n          <Text style={styles.detailValue}>\r\n            {this.state.newDetails[propName]}\r\n          </Text>\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  public async componentDidMount(): Promise<void> {\r\n    const { details } = this.props.route.params;\r\n    const newDetails = { ...details };\r\n\r\n    await Promise.all(\r\n      Object.keys(details).map(async (key) => {\r\n        if (\r\n          details[key].toString().includes(\"https\") &&\r\n          !Array.isArray(details[key])\r\n        ) {\r\n          newDetails[key] = await this.getDetail(details[key]);\r\n        }\r\n        if (Array.isArray(details[key])) {\r\n          await Promise.all(\r\n            details[key].map(\r\n              async (arrayItem, index) =>\r\n                (newDetails[key][index] = await this.getDetail(arrayItem))\r\n            )\r\n          );\r\n        }\r\n      })\r\n    );\r\n    this.setState({ newDetails: newDetails });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <View style={styles.detailsContainer}>\r\n        <FlatList\r\n          data={Object.keys(this.state.newDetails)}\r\n          keyExtractor={(item) => item}\r\n          renderItem={({ item }) => this.renderDetail(item)}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  detailsContainer: {\r\n    backgroundColor: colors.mainBackground,\r\n  },\r\n  details: {\r\n    flex: 1,\r\n    padding: 10,\r\n    paddingLeft: 25,\r\n    borderBottomColor: \"rgba(161, 161, 161, 0.4)\",\r\n    borderBottomWidth: 1,\r\n  },\r\n  detailName: {\r\n    color: colors.textBlue,\r\n    fontWeight: \"bold\",\r\n    lineHeight: 20,\r\n  },\r\n  detailValue: {\r\n    color: colors.textBlue,\r\n    lineHeight: 20,\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  StyleSheet,\r\n  TouchableHighlight,\r\n  Image,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\ninterface InputProps {\r\n  placeholderText: string;\r\n  onSearchInput: (search: string) => void;\r\n  searchItem: () => void;\r\n}\r\n\r\nexport default class SearchInput extends Component<InputProps, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          placeholder={this.props.placeholderText}\r\n          style={styles.inputStyle}\r\n          onChangeText={(search) => this.props.onSearchInput(search)}\r\n        />\r\n        <TouchableHighlight onPress={this.props.searchItem}>\r\n          <Image\r\n            style={styles.imageStyle}\r\n            source={require(\"../assets/searchIcon.png\")}\r\n          />\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    borderBottomWidth: 1,\r\n    backgroundColor: colors.searchWindow,\r\n    width: 354,\r\n    height: 50,\r\n    margin: 6,\r\n    padding: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n  inputStyle: { flex: 1 },\r\n  imageStyle: {\r\n    margin: 3,\r\n    height: 15,\r\n    width: 15,\r\n    resizeMode: \"stretch\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import { NavigationProp } from \"@react-navigation/native\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableHighlight,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport colors from \"../config/colors\";\r\nimport { Authenticator } from \"../service/Authenticator\";\r\n\r\ninterface AuthState {\r\n  login: string;\r\n  password: string;\r\n  icon: string;\r\n  isHidden: boolean;\r\n  invalidLogIn: boolean;\r\n}\r\n\r\ninterface IAuthProps {\r\n  navigation: NavigationProp<any>;\r\n}\r\n\r\nexport default class Autenthication extends Component<IAuthProps, AuthState> {\r\n  private authenticator = new Authenticator();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      login: \"\",\r\n      password: \"\",\r\n      icon: \"eye-slash\",\r\n      isHidden: true,\r\n      invalidLogIn: false,\r\n    };\r\n  }\r\n  private changeIcon = () => {\r\n    this.setState((prevState) => ({\r\n      icon: prevState.icon === \"eye\" ? \"eye-slash\" : \"eye\",\r\n      isHidden: !prevState.isHidden,\r\n    }));\r\n  };\r\n\r\n  private onLogIn = () => {\r\n    try {\r\n      this.authenticator.setToken(this.state.login, this.state.password);\r\n      this.props.navigation.navigate(\"Start\");\r\n      this.setState({ invalidLogIn: false });\r\n    } catch (e) {\r\n      this.setState({ invalidLogIn: true });\r\n    }\r\n  };\r\n\r\n  public async componentDidMount(): Promise<void> {\r\n    try {\r\n      const token = await this.authenticator.getToken();\r\n      if (token) {\r\n        this.props.navigation.navigate(\"Start\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ImageBackground\r\n          source={require(\"../assets/background.jpg\")}\r\n          resizeMode=\"cover\"\r\n          style={styles.imageBackground}\r\n        >\r\n          <View style={styles.content}>\r\n            {this.state.invalidLogIn && (\r\n              <Text style={styles.loginErrorMsg}>\r\n                {\r\n                  \"Invalid login or password. Try login: 'Wooo' and password: 'kiee'.\"\r\n                }\r\n              </Text>\r\n            )}\r\n            <View style={styles.inputContainer}>\r\n              <TextInput\r\n                style={{ width: \"100%\" }}\r\n                placeholder={\"login\"}\r\n                onChangeText={(login) => this.setState({ login })}\r\n              />\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n              <TextInput\r\n                style={{ width: \"95%\" }}\r\n                secureTextEntry={this.state.isHidden}\r\n                placeholder={\"password\"}\r\n                onChangeText={(password) => this.setState({ password })}\r\n              />\r\n              <Icon\r\n                style={styles.iconStyle}\r\n                name={this.state.icon}\r\n                onPress={this.changeIcon}\r\n              ></Icon>\r\n            </View>\r\n            <TouchableHighlight\r\n              style={styles.logInButton}\r\n              onPress={this.onLogIn}\r\n            >\r\n              <Text style={styles.buttonText}>Log in</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  iconStyle: {\r\n    alignSelf: \"center\",\r\n    fontSize: 20,\r\n  },\r\n  imageBackground: {\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    alignItems: \"center\",\r\n    margin: 48,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    borderBottomWidth: 1,\r\n    backgroundColor: colors.searchWindow,\r\n    width: 354,\r\n    height: 50,\r\n    margin: 6,\r\n    padding: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n  logInButton: {\r\n    justifyContent: \"center\",\r\n    borderColor: colors.borderWhite,\r\n    backgroundColor: colors.mainBackground,\r\n    borderWidth: 1,\r\n    width: 170,\r\n    height: 50,\r\n    marginTop: 36,\r\n  },\r\n  buttonText: {\r\n    color: colors.textBlue,\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n  },\r\n  loginErrorMsg: {\r\n    color: \"red\",\r\n    backgroundColor: colors.mainBackground,\r\n    borderColor: \"red\",\r\n    borderWidth: 1,\r\n    padding: 6,\r\n  },\r\n});\r\n","import * as SecureStore from \"expo-secure-store\";\r\nimport { Platform } from \"react-native\";\r\n\r\nexport class Authenticator {\r\n  public getToken = async (): Promise<string> => {\r\n    let token: string;\r\n    if (Platform.OS === \"web\") {\r\n      token = localStorage.getItem(\"secure_token\");\r\n    } else {\r\n      token = await SecureStore.getItemAsync(\"secure_token\");\r\n    }\r\n    return Promise.resolve(token);\r\n  };\r\n\r\n  public setToken(login: string, password: string) {\r\n    if (login === \"Wooo\" && password === \"kiee\") {\r\n      const token = \"gdaa23jjhk32lja\";\r\n      if (Platform.OS === \"web\") {\r\n        localStorage.setItem(\"secure_token\", token);\r\n      } else {\r\n        SecureStore.setItemAsync(\"secure_token\", token);\r\n      }\r\n      return token;\r\n    }\r\n    throw \"Invalid login or password\";\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/background.4c012343.jpg\";","import React from \"react\";\r\nimport { IFilm } from \"../model/IFilm\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { FilmsService } from \"../service/FilmsService\";\r\nimport Base, { BaseState } from \"./Base\";\r\n\r\ninterface State extends BaseState {\r\n  data: IFilm[];\r\n}\r\n\r\nexport default class Films extends Base<State> {\r\n  protected detailsService: FilmsService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.detailsService = new FilmsService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  protected async getData() {\r\n    try {\r\n      const response: IDataSW<IFilm[]> = await this.detailsService.getFilms();\r\n      this.setState(\r\n        {\r\n          data: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n  protected searchDetail = () => {\r\n    return null;\r\n  };\r\n\r\n  protected getNextPage = async (previousResponse: IDataSW<IFilm[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IFilm[]> = await this.detailsService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState({ data: combinedResults }, () =>\r\n          this.getNextPage(response)\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  private romans = [0, \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"];\r\n\r\n  protected renderItemContent = (item) => {\r\n    return [\r\n      [\"Episode\", this.romans[item.episode_id].toLocaleString()],\r\n      [\"Director\", item.director],\r\n      [\"Release date\", item.release_date],\r\n    ];\r\n  };\r\n}\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IFilm } from \"../model/IFilm\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class FilmsService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getFilms(): Promise<IDataSW<IFilm[]>> {\r\n    return this.dataService.getData(\"films\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IFilm[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IStarship } from \"../model/IStarship\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { StarshipsService } from \"../service/StarshipsService\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\nimport Base, { BaseState } from \"./Base\";\r\nimport ResetFilterBtn from \"../UI/ResetFiltersBtn\";\r\nimport { View } from \"react-native\";\r\n\r\ninterface State extends BaseState {\r\n  data: IStarship[];\r\n  originalData: IStarship[];\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n}\r\n\r\nexport default class People extends Base<State> {\r\n  protected detailsService: StarshipsService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.detailsService = new StarshipsService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n    };\r\n  }\r\n\r\n  protected async getData() {\r\n    try {\r\n      const response: IDataSW<IStarship[]> =\r\n        await this.detailsService.getStarship();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterDetails();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  private getNextPage = async (previousResponse: IDataSW<IStarship[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IStarship[]> =\r\n          await this.detailsService.getMore(previousResponse.next);\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(\r\n                combinedResults.map((item) => item.starship_class.toLowerCase())\r\n              ),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterDetails();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  protected searchDetail = async () => {\r\n    try {\r\n      const response: IDataSW<IStarship[]> =\r\n        await this.detailsService.searchStarship(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue }, this.filterDetails);\r\n  };\r\n\r\n  protected filterDetails = () => {\r\n    if (this.state.pickerSelectedValue !== \"all\") {\r\n      let filteredData = this.state.originalData.filter(\r\n        (filterItem) =>\r\n          filterItem.starship_class.toLowerCase() ===\r\n          this.state.pickerSelectedValue\r\n      );\r\n      this.setState({ data: filteredData });\r\n    } else {\r\n      this.setState({ data: this.state.originalData });\r\n    }\r\n  };\r\n\r\n  protected renderItemContent = (item) => {\r\n    return [\r\n      [\r\n        \"Cost in credits\",\r\n        !isNaN(Number(item.cost_in_credits))\r\n          ? Number(item.cost_in_credits).toLocaleString()\r\n          : item.cost_in_credits,\r\n      ],\r\n      [\"Length\", Number(item.length.replace(\".\", \"\")).toLocaleString()],\r\n      [\"Crew\", item.crew.replace(\",\", \" \")],\r\n    ];\r\n  };\r\n\r\n  private resetFilters = () => {\r\n    this.setState({\r\n      data: this.state.originalData,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n    });\r\n  };\r\n\r\n  protected renderCustomFilters() {\r\n    return (\r\n      <>\r\n        <SearchInput\r\n          placeholderText={\"name or model\"}\r\n          onSearchInput={this.onSearchDetail}\r\n          searchItem={this.searchDetail}\r\n        />\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <Dropdown\r\n            pickerData={[\"all\", ...this.state.pickerData]}\r\n            pickerSelectedValue={this.state.pickerSelectedValue}\r\n            onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n          />\r\n          <ResetFilterBtn onResetFilters={this.resetFilters} />\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IStarship } from \"../model/IStarship\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class StarshipsService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getStarship(): Promise<IDataSW<IStarship[]>> {\r\n    return this.dataService.getData(\"starships\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IStarship[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchStarship(query: string) {\r\n    return this.dataService.getData(\"starships/?search=\" + query);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IVehicle } from \"../model/IVehicle\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { VehiclesService } from \"../service/VehiclesService\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\nimport FilterSlider from \"../UI/FilterSlider\";\r\nimport Base, { BaseState } from \"./Base\";\r\nimport ResetFilterBtn from \"../UI/ResetFiltersBtn\";\r\nimport { View } from \"react-native\";\r\n\r\ninterface State extends BaseState {\r\n  data: IVehicle[];\r\n  originalData: IVehicle[];\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n  sliderValue: number;\r\n}\r\nexport default class Vehicles extends Base<State> {\r\n  protected detailsService: VehiclesService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.detailsService = new VehiclesService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n      sliderValue: 0,\r\n    };\r\n  }\r\n\r\n  protected async getData() {\r\n    try {\r\n      const response: IDataSW<IVehicle[]> =\r\n        await this.detailsService.getVehicles();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterDetails();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  protected getNextPage = async (previousResponse: IDataSW<IVehicle[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IVehicle[]> = await this.detailsService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(\r\n                combinedResults.map((item) => item.vehicle_class.toLowerCase())\r\n              ),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterDetails();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  protected searchDetail = async () => {\r\n    try {\r\n      const response: IDataSW<IVehicle[]> =\r\n        await this.detailsService.searchVehicle(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue }, this.filterDetails);\r\n  };\r\n\r\n  protected filterDetails = () => {\r\n    let filteredData = this.state.originalData;\r\n    if (this.state.pickerSelectedValue !== \"all\") {\r\n      filteredData = filteredData.filter(\r\n        (filterItem) =>\r\n          filterItem.vehicle_class.toLowerCase() ===\r\n          this.state.pickerSelectedValue\r\n      );\r\n    }\r\n    filteredData = filteredData.filter((item) => {\r\n      if (item.cost_in_credits === \"unknown\" && this.state.sliderValue === 0)\r\n        return item;\r\n      if (\r\n        Number(item.cost_in_credits.replace(\",\", \"\")) >= this.state.sliderValue\r\n      ) {\r\n        return item;\r\n      }\r\n    });\r\n    this.setState({ data: filteredData });\r\n  };\r\n\r\n  private onSliderValueChange = (value: number) => {\r\n    this.setState({ sliderValue: value[0] }, this.filterDetails);\r\n  };\r\n\r\n  private getCosts(data: IVehicle[]): number[] {\r\n    const costs: number[] = data.reduce((filtered, starship) => {\r\n      const cost = Number(starship.cost_in_credits);\r\n      if (!isNaN(cost)) {\r\n        filtered.push(cost);\r\n      }\r\n      return filtered;\r\n    }, []);\r\n    return costs;\r\n  }\r\n\r\n  private maxCost = () => {\r\n    const costs: number[] = this.getCosts(this.state.data);\r\n    const maxCost = costs.length > 0 ? Math.max(...costs) : 100;\r\n    return maxCost;\r\n  };\r\n\r\n  protected renderItemContent = (item) => {\r\n    return [\r\n      [\r\n        \"Cost in credits\",\r\n        !isNaN(Number(item.cost_in_credits))\r\n          ? Number(item.cost_in_credits).toLocaleString()\r\n          : item.cost_in_credits,\r\n      ],\r\n      [\"Length\", Number(item.length.replace(\".\", \"\")).toLocaleString()],\r\n      [\"Crew\", item.crew.replace(\",\", \" \")],\r\n    ];\r\n  };\r\n\r\n  private resetFilters = () => {\r\n    this.setState({\r\n      data: this.state.originalData,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      sliderValue: 0,\r\n    });\r\n  };\r\n\r\n  protected renderCustomFilters() {\r\n    return (\r\n      <>\r\n        <SearchInput\r\n          placeholderText={\"name or model\"}\r\n          onSearchInput={this.onSearchDetail}\r\n          searchItem={this.searchDetail}\r\n        />\r\n        <FilterSlider\r\n          thumbTitle={\"Cost in credits\"}\r\n          sliderValue={this.state.sliderValue}\r\n          max={this.maxCost()}\r\n          min={0}\r\n          onValueChange={this.onSliderValueChange}\r\n        />\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <Dropdown\r\n            pickerData={[\"all\", ...this.state.pickerData]}\r\n            pickerSelectedValue={this.state.pickerSelectedValue}\r\n            onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n          />\r\n          <ResetFilterBtn onResetFilters={this.resetFilters} />\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IVehicle } from \"../model/IVehicle\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class VehiclesService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getVehicles(): Promise<IDataSW<IVehicle[]>> {\r\n    return this.dataService.getData(\"vehicles\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IVehicle[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchVehicle(query: string) {\r\n    return this.dataService.getData(\"vehicles/?search=\" + query);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { ISpecies } from \"../model/ISpecies\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { SpeciesService } from \"../service/SpeciesService\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\nimport Base, { BaseState } from \"./Base\";\r\nimport ResetFilterBtn from \"../UI/ResetFiltersBtn\";\r\nimport { View } from \"react-native\";\r\n\r\ninterface State extends BaseState {\r\n  data: ISpecies[];\r\n  originalData: ISpecies[];\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n}\r\nexport default class Species extends Base<State> {\r\n  protected detailsService: SpeciesService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.detailsService = new SpeciesService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n    };\r\n  }\r\n\r\n  protected async getData() {\r\n    try {\r\n      const response: IDataSW<ISpecies[]> =\r\n        await this.detailsService.getSpecies();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterDetails();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  protected getNextPage = async (previousResponse: IDataSW<ISpecies[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<ISpecies[]> = await this.detailsService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(combinedResults.map((item) => item.classification)),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterDetails();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  protected searchDetail = async () => {\r\n    try {\r\n      const response: IDataSW<ISpecies[]> =\r\n        await this.detailsService.searchSpecies(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  protected onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue }, this.filterDetails);\r\n  };\r\n\r\n  protected filterDetails = () => {\r\n    if (this.state.pickerSelectedValue !== \"all\") {\r\n      let filteredData = this.state.originalData.filter(\r\n        (filterItem) =>\r\n          filterItem.classification === this.state.pickerSelectedValue\r\n      );\r\n      this.setState({ data: filteredData });\r\n    } else {\r\n      this.setState({ data: this.state.originalData });\r\n    }\r\n  };\r\n\r\n  protected renderItemContent = (item) => {\r\n    return [\r\n      [\"Classification\", item.classification],\r\n      [\"Average height\", item.average_height],\r\n      [\"Average lifespan\", item.average_lifespan],\r\n    ];\r\n  };\r\n\r\n  private resetFilters = () => {\r\n    this.setState({\r\n      data: this.state.originalData,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n    });\r\n  };\r\n  protected renderCustomFilters() {\r\n    return (\r\n      <>\r\n        <SearchInput\r\n          placeholderText={\"name\"}\r\n          onSearchInput={this.onSearchDetail}\r\n          searchItem={this.searchDetail}\r\n        />\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <Dropdown\r\n            pickerData={[\"all\", ...this.state.pickerData]}\r\n            pickerSelectedValue={this.state.pickerSelectedValue}\r\n            onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n          />\r\n          <ResetFilterBtn onResetFilters={this.resetFilters} />\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { IDataService } from \"./IDataService\";\r\nimport { ISpecies } from \"../model/ISpecies\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class SpeciesService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getSpecies(): Promise<IDataSW<ISpecies[]>> {\r\n    return this.dataService.getData(\"species\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<ISpecies[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchSpecies(query: string) {\r\n    return this.dataService.getData(\"species/?search=\" + query);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IPlanet } from \"../model/IPlanet\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\nimport { PlanetsService } from \"../service/PlanetsService\";\r\nimport SearchInput from \"../UI/SearchInput\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\nimport FilterSlider from \"../UI/FilterSlider\";\r\nimport Base, { BaseState } from \"./Base\";\r\nimport ResetFilterBtn from \"../UI/ResetFiltersBtn\";\r\nimport { View } from \"react-native\";\r\n\r\ninterface State extends BaseState {\r\n  data: IPlanet[];\r\n  originalData: IPlanet[];\r\n  pickerSelectedValue: string;\r\n  pickerData: string[];\r\n  sliderValue: number;\r\n}\r\nexport default class People extends Base<State> {\r\n  protected detailsService: PlanetsService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.detailsService = new PlanetsService(props.route.params.dataService);\r\n\r\n    this.state = {\r\n      data: [],\r\n      originalData: [],\r\n      isLoading: true,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      pickerData: [],\r\n      sliderValue: 0,\r\n    };\r\n  }\r\n\r\n  protected async getData() {\r\n    try {\r\n      const response: IDataSW<IPlanet[]> =\r\n        await this.detailsService.getPlanets();\r\n      this.setState(\r\n        {\r\n          originalData: response.results,\r\n        },\r\n        () => this.getNextPage(response)\r\n      );\r\n      this.filterDetails();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  protected getNextPage = async (previousResponse: IDataSW<IPlanet[]>) => {\r\n    if (previousResponse.next) {\r\n      try {\r\n        const response: IDataSW<IPlanet[]> = await this.detailsService.getMore(\r\n          previousResponse.next\r\n        );\r\n        const combinedResults = [...this.state.data, ...response.results];\r\n        this.setState(\r\n          {\r\n            originalData: combinedResults,\r\n            pickerData: [\r\n              ...new Set(combinedResults.map((item) => item.climate)),\r\n            ],\r\n          },\r\n          () => this.getNextPage(response)\r\n        );\r\n        this.filterDetails();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  protected searchDetail = async () => {\r\n    try {\r\n      const response: IDataSW<IPlanet[]> =\r\n        await this.detailsService.searchPlanet(this.state.search);\r\n      this.setState({ data: response.results });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private onSetPickerSelectedValue = (pickerSelectedValue) => {\r\n    this.setState({ pickerSelectedValue }, this.filterDetails);\r\n  };\r\n\r\n  protected filterDetails = () => {\r\n    let filteredData = this.state.originalData;\r\n    if (this.state.pickerSelectedValue !== \"all\") {\r\n      filteredData = filteredData.filter(\r\n        (filterItem) =>\r\n          filterItem.climate.toLowerCase() === this.state.pickerSelectedValue\r\n      );\r\n    }\r\n    filteredData = filteredData.filter((item) => {\r\n      if (item.diameter === \"unknown\" && this.state.sliderValue === 0)\r\n        return item;\r\n      if (Number(item.diameter.replace(\",\", \"\")) >= this.state.sliderValue) {\r\n        return item;\r\n      }\r\n    });\r\n    this.setState({ data: filteredData });\r\n  };\r\n\r\n  private onSliderValueChange = (value: number) => {\r\n    this.setState({ sliderValue: value[0] }, this.filterDetails);\r\n  };\r\n\r\n  private getDiameter(data: IPlanet[]): number[] {\r\n    const diameters: number[] = data.reduce((filtered, planet) => {\r\n      const diameter = Number(planet.diameter);\r\n      if (!isNaN(diameter)) {\r\n        filtered.push(diameter);\r\n      }\r\n      return filtered;\r\n    }, []);\r\n    return diameters;\r\n  }\r\n\r\n  private maxDiameter = () => {\r\n    const diameter: number[] = this.getDiameter(this.state.data);\r\n    const maxDiameter = diameter.length > 0 ? Math.max(...diameter) : 100;\r\n    return maxDiameter;\r\n  };\r\n\r\n  protected renderItemContent = (item) => {\r\n    return [\r\n      [\r\n        \"Diameter\",\r\n        !isNaN(Number(item.diameter))\r\n          ? Number(item.diameter).toLocaleString()\r\n          : item.diameter,\r\n      ],\r\n      [\"Rotation period\", item.rotation_period],\r\n      [\"Orbital period\", item.orbital_period],\r\n    ];\r\n  };\r\n\r\n  private resetFilters = () => {\r\n    this.setState({\r\n      data: this.state.originalData,\r\n      search: \"\",\r\n      pickerSelectedValue: \"all\",\r\n      sliderValue: 0,\r\n    });\r\n  };\r\n  protected renderCustomFilters() {\r\n    return (\r\n      <>\r\n        <SearchInput\r\n          placeholderText={\"name\"}\r\n          onSearchInput={this.onSearchDetail}\r\n          searchItem={this.searchDetail}\r\n        />\r\n\r\n        <FilterSlider\r\n          thumbTitle={\"Diameter\"}\r\n          sliderValue={this.state.sliderValue}\r\n          max={this.maxDiameter()}\r\n          min={0}\r\n          onValueChange={this.onSliderValueChange}\r\n        />\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <Dropdown\r\n            pickerData={[\"all\", ...this.state.pickerData]}\r\n            pickerSelectedValue={this.state.pickerSelectedValue}\r\n            onSetPickerSelectedValue={this.onSetPickerSelectedValue}\r\n          />\r\n          <ResetFilterBtn onResetFilters={this.resetFilters} />\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { IDataService } from \"./IDataService\";\r\nimport { IPlanet } from \"../model/IPlanet\";\r\nimport { IDataSW } from \"../model/IDataSW\";\r\n\r\nexport class PlanetsService {\r\n  constructor(private dataService: IDataService) {}\r\n\r\n  public getPlanets(): Promise<IDataSW<IPlanet[]>> {\r\n    return this.dataService.getData(\"planets\");\r\n  }\r\n\r\n  public getMore(nextURL: string): Promise<IDataSW<IPlanet[]>> {\r\n    return this.dataService.getData(nextURL);\r\n  }\r\n\r\n  public searchPlanet(query: string) {\r\n    return this.dataService.getData(\"planets/?search=\" + query);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport colors from \"../config/colors\";\r\n\r\ninterface PickerProps {\r\n  pickerData: string[];\r\n  pickerSelectedValue: string;\r\n  onSetPickerSelectedValue: (pickerSelectedValue) => void;\r\n}\r\n\r\nexport default class Dropdown extends Component<PickerProps, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let pickerOptions = this.props.pickerData.map(function (item) {\r\n      return <Picker.Item key={item} value={item} label={item} />;\r\n    });\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Picker\r\n          selectedValue={this.props.pickerSelectedValue}\r\n          style={styles.picker}\r\n          onValueChange={this.props.onSetPickerSelectedValue}\r\n        >\r\n          {pickerOptions}\r\n        </Picker>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n  },\r\n  picker: { height: 50, width: 170, margin: 6, backgroundColor: colors.picker },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { TouchableHighlight, Text, StyleSheet } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\ninterface ResetFiltersProps {\r\n  onResetFilters: () => void;\r\n}\r\n\r\nexport default class ResetFilterBtn extends Component<ResetFiltersProps, {}> {\r\n  render() {\r\n    return (\r\n      <TouchableHighlight>\r\n        <Text style={styles.text} onPress={this.props.onResetFilters}>\r\n          Reset filters\r\n        </Text>\r\n      </TouchableHighlight>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    textAlign: \"center\",\r\n    backgroundColor: colors.mainBanana,\r\n    width: 170,\r\n    height: 51.6,\r\n    margin: 6,\r\n    padding: 15,\r\n    fontWeight: \"bold\",\r\n    color: colors.textBlue,\r\n  },\r\n});\r\n"],"sourceRoot":""}